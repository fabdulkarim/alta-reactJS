{"ast":null,"code":"import _regeneratorRuntime from \"/home/alta14/Desktop/AltA/react/challenge-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/alta14/Desktop/AltA/react/challenge-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"/home/alta14/Desktop/AltA/react/challenge-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport createStore from \"unistore\";\nimport { stat } from \"fs\"; //moving main axios-reload to here\n\nimport axios from \"axios\";\nvar apiKey = \"485a6bc08eca4546a902aa3f87808b0c\";\nvar baseUrl = \"https://newsapi.org/v2\";\nvar urlCombined = baseUrl + \"/top-headlines?country=id&apiKey=\" + apiKey;\nvar initState = {\n  full_name: \"\",\n  url_to_image: \"\",\n  is_login: false,\n  username: \"\",\n  password: \"\",\n  main_list: [],\n  main_loading: true,\n  now_time: new Date(),\n  search: \"\",\n  is_query: false\n};\nexport var store = createStore(initState);\nexport var actions = function actions(store) {\n  return {\n    handleChange: function handleChange(state, event) {\n      // console.log()\n      return _defineProperty({}, event.target.name, event.target.value);\n    },\n    handleInput: function handleInput(state, dict) {\n      console.warn(dict);\n      return _defineProperty({}, dict.key, dict.value);\n    },\n    reload: function () {\n      var _reload = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(state) {\n        var category,\n            newUrl,\n            local,\n            _args = arguments;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                category = _args.length <= 1 ? undefined : _args[1];\n                (_args.length <= 1 ? 0 : _args.length - 1) == 1 ? newUrl = urlCombined + \"&category=\" + category : newUrl = urlCombined + \"&q=\" + (_args.length <= 2 ? undefined : _args[2]);\n                _context.next = 4;\n                return axios.get(newUrl + \"&pageSize=10\").then(function (response) {\n                  local = response.data;\n                }).catch();\n\n              case 4:\n                console.log(local);\n                return _context.abrupt(\"return\", {\n                  main_list: local.articles,\n                  main_loading: false,\n                  now_time: new Date()\n                });\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function reload(_x) {\n        return _reload.apply(this, arguments);\n      }\n\n      return reload;\n    }()\n  };\n};","map":{"version":3,"sources":["/home/alta14/Desktop/AltA/react/challenge-react/src/store.jsx"],"names":["createStore","stat","axios","apiKey","baseUrl","urlCombined","initState","full_name","url_to_image","is_login","username","password","main_list","main_loading","now_time","Date","search","is_query","store","actions","handleChange","state","event","target","name","value","handleInput","dict","console","warn","key","reload","category","newUrl","get","then","response","local","data","catch","log","articles"],"mappings":";;;AAAA,OAAOA,WAAP,MAAwB,UAAxB;AACA,SAASC,IAAT,QAAqB,IAArB,C,CAGA;;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,IAAMC,MAAM,GAAG,kCAAf;AACA,IAAMC,OAAO,GAAG,wBAAhB;AACA,IAAMC,WAAW,GAAGD,OAAO,GAAG,mCAAV,GAAgDD,MAApE;AAEA,IAAMG,SAAS,GAAG;AACdC,EAAAA,SAAS,EAAE,EADG;AAEdC,EAAAA,YAAY,EAAE,EAFA;AAGdC,EAAAA,QAAQ,EAAE,KAHI;AAIdC,EAAAA,QAAQ,EAAE,EAJI;AAKdC,EAAAA,QAAQ,EAAE,EALI;AAMdC,EAAAA,SAAS,EAAE,EANG;AAOdC,EAAAA,YAAY,EAAE,IAPA;AAQdC,EAAAA,QAAQ,EAAE,IAAIC,IAAJ,EARI;AASdC,EAAAA,MAAM,EAAE,EATM;AAUdC,EAAAA,QAAQ,EAAE;AAVI,CAAlB;AAaA,OAAO,IAAMC,KAAK,GAAGlB,WAAW,CAACM,SAAD,CAAzB;AAEP,OAAO,IAAMa,OAAO,GAAG,SAAVA,OAAU,CAAAD,KAAK;AAAA,SAAK;AAC7BE,IAAAA,YAAY,EAAE,sBAACC,KAAD,EAAQC,KAAR,EAAkB;AAC5B;AACA,iCAAUA,KAAK,CAACC,MAAN,CAAaC,IAAvB,EAA+BF,KAAK,CAACC,MAAN,CAAaE,KAA5C;AACH,KAJ4B;AAM7BC,IAAAA,WAAW,EAAE,qBAACL,KAAD,EAAQM,IAAR,EAAiB;AAC1BC,MAAAA,OAAO,CAACC,IAAR,CAAaF,IAAb;AACA,iCAAUA,IAAI,CAACG,GAAf,EAAsBH,IAAI,CAACF,KAA3B;AACH,KAT4B;AAW7BM,IAAAA,MAAM;AAAA;AAAA;AAAA,+BAAE,iBAAOV,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACEW,gBAAAA,QADF;AAGH,8DAAuB,CAAxB,GAA6BC,MAAM,GAAG5B,WAAW,GAAG,YAAd,GAA6B2B,QAAnE,GAA8EC,MAAM,GAAG5B,WAAW,GAAG,KAAd,6CAAvF;AAHI;AAAA,uBAIEH,KAAK,CAACgC,GAAN,CAAUD,MAAM,GAAG,cAAnB,EACDE,IADC,CACI,UAAUC,QAAV,EAAoB;AACtBC,kBAAAA,KAAK,GAAGD,QAAQ,CAACE,IAAjB;AACH,iBAHC,EAIDC,KAJC,EAJF;;AAAA;AASJX,gBAAAA,OAAO,CAACY,GAAR,CAAYH,KAAZ;AATI,iDAUG;AAAEzB,kBAAAA,SAAS,EAAEyB,KAAK,CAACI,QAAnB;AAA6B5B,kBAAAA,YAAY,EAAE,KAA3C;AAAkDC,kBAAAA,QAAQ,EAAE,IAAIC,IAAJ;AAA5D,iBAVH;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAXuB,GAAL;AAAA,CAArB","sourcesContent":["import createStore from \"unistore\"\nimport { stat } from \"fs\";\n\n\n//moving main axios-reload to here\nimport axios from \"axios\"\nconst apiKey = \"485a6bc08eca4546a902aa3f87808b0c\";\nconst baseUrl = \"https://newsapi.org/v2\";\nconst urlCombined = baseUrl + \"/top-headlines?country=id&apiKey=\" + apiKey;\n\nconst initState = {\n    full_name: \"\",\n    url_to_image: \"\",\n    is_login: false,\n    username: \"\",\n    password: \"\",\n    main_list: [],\n    main_loading: true,\n    now_time: new Date(),\n    search: \"\",\n    is_query: false\n};\n\nexport const store = createStore(initState);\n\nexport const actions = store => ({\n    handleChange: (state, event) => {\n        // console.log()\n        return { [event.target.name] : event.target.value };\n    },\n\n    handleInput: (state, dict) => {\n        console.warn(dict)\n        return { [dict.key] : dict.value };\n    },\n\n    reload: async (state, ...restArgument) => {\n        const category = restArgument[0]\n        let newUrl, local;\n        (restArgument.length == 1) ? newUrl = urlCombined + \"&category=\" + category : newUrl = urlCombined + \"&q=\" + restArgument[1]\n        await axios.get(newUrl + \"&pageSize=10\")\n            .then(function (response) {\n                local = response.data;\n            })\n            .catch();\n        console.log(local);            \n        return { main_list: local.articles, main_loading: false, now_time: new Date() };\n    }\n});"]},"metadata":{},"sourceType":"module"}